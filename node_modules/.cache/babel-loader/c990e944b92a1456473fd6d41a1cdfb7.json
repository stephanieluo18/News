{"ast":null,"code":"var _jsxFileName = \"/Users/stephanieluo/Desktop/News/src/App.js\";\nimport React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./css/normalize.css\";\nimport \"./css/skeleton.css\";\nimport \"./css/App.css\";\nimport Alert from \"./Components/Alert.js\";\nimport Select from \"react-select\";\nimport Article from \"./Components/Article.js\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [articles, setArticles] = useState(\"\");\n  const [alert, setAlert] = useState(\"\");\n  /* dropdown defaults to general category */\n\n  const [dropdown, setDropdown] = useState({\n    value: \"general\",\n    label: \"General\"\n  });\n  /* ids based on a specific category is populated here */\n\n  const ids = [];\n  /* Dropdown options for different categories*/\n\n  const labels = [{\n    value: \"general\",\n    label: \"General\"\n  }, {\n    value: \"business\",\n    label: \"Business\"\n  }, {\n    value: \"entertainment\",\n    label: \"Entertainment\"\n  }, {\n    value: \"sports\",\n    label: \"Sports\"\n  }];\n  /* Defaults to Most recent articles*/\n\n  const [sort, setSort] = useState({\n    value: \"publishedAt\",\n    label: \"Most Recent\"\n  });\n  /* Dropdown options for different options to sort*/\n\n  const dates = [{\n    value: \"publishedAt\",\n    label: \"Most Recent\"\n  }, {\n    value: \"relevancy\",\n    label: \"Most Relevant\"\n  }, {\n    value: \"popularity\",\n    label: \"Most Popular\"\n  }];\n\n  const getData = async () => {\n    /* source url determines the possible related ids based on category */\n    const source = `https://newsapi.org/v2/sources?category=${dropdown.value}&apiKey=78b9d599c4f94f8fa3afb1a5458928d6`; //const response = await fetch(\"https://cors-anywhere.herokuapp.com/\"+source, {mode: 'cors'});\n\n    const response = await fetch(source);\n    const data = await response.json(); //console.log(data);\n    //console.log(data.sources.length); //length of array\n    //console.log(data.sources[0].id); // should display id of the first array\n\n    /* fetch all possible ids and add it to sources of the url below */\n\n    for (let i = 0; i < data.sources.length; i++) {\n      ids.push(data.sources[i].id); // array of the ids\n    }\n    /* x is the string representation of the id array */\n\n\n    let x = \"\";\n    /* sources can take only a max of 20 items so if category is general, there is no need to filter*/\n\n    dropdown.value === \"general\" ? x = \"\" : x = ids.toString();\n    /* main source to search for articles */\n\n    const url = `https://newsapi.org/v2/everything?q=${query}&sources=${x}&sortBy=${sort.value}&pageSize=30&apiKey=78b9d599c4f94f8fa3afb1a5458928d6`;\n    /* if user does not enter anything, alert message will show*/\n\n    if (query === \"\") {\n      return setAlert(\"Please type in a keyword\");\n    } //const result = await Axios.get(\"https://cors-anywhere.herokuapp.com/\"+url, {mode: 'cors'});\n\n\n    const result = await Axios.get(url); //console.log(sources);\n\n    /* if no results show, alert message is displayed */\n\n    if (result.data.totalResults === 0) {\n      return setAlert(\"No articles found with such name\");\n    }\n\n    setArticles(result.data.articles);\n    setAlert(\"\"); //setQuery(\"\");\n  };\n  /* query */\n\n\n  const onChange = e => {\n    setQuery(e.target.value);\n  };\n  /* when search button is clicked */\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n    getData();\n  };\n  /* handles the changes for the different categories */\n\n\n  const handleChange = event => {\n    setDropdown(event);\n  };\n  /* handles the changes for the different sorting methods */\n\n\n  const handleSort = event => {\n    setSort(event);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, \"Worldwide News\")), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"search-bar\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alertStyle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, alert !== \"\" && /*#__PURE__*/React.createElement(Alert, {\n    alert: alert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 28\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search News\",\n    autoComplete: \"off\",\n    onChange: onChange,\n    value: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: dropdown,\n    options: labels,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: sort,\n    options: dates,\n    onChange: handleSort,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"articles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, articles != [] && articles.map(article => /*#__PURE__*/React.createElement(Article, {\n    key: uuidv4(),\n    article: article,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/stephanieluo/Desktop/News/src/App.js"],"names":["React","useState","Axios","v4","uuidv4","Alert","Select","Article","App","query","setQuery","articles","setArticles","alert","setAlert","dropdown","setDropdown","value","label","ids","labels","sort","setSort","dates","getData","source","response","fetch","data","json","i","sources","length","push","id","x","toString","url","result","get","totalResults","onChange","e","target","onSubmit","preventDefault","handleChange","event","handleSort","map","article"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./css/normalize.css\";\nimport \"./css/skeleton.css\";\nimport \"./css/App.css\";\nimport Alert from \"./Components/Alert.js\";\nimport Select from \"react-select\";\nimport Article from \"./Components/Article.js\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [articles, setArticles] = useState(\"\");\n  const [alert, setAlert] = useState(\"\");\n\n  /* dropdown defaults to general category */\n  const [dropdown, setDropdown] = useState({\n    value: \"general\",\n    label: \"General\",\n  });\n\n  /* ids based on a specific category is populated here */\n  const ids = [];\n\n  /* Dropdown options for different categories*/\n  const labels = [\n    {\n      value: \"general\",\n      label: \"General\",\n    },\n    {\n      value: \"business\",\n      label: \"Business\",\n    },\n    {\n      value: \"entertainment\",\n      label: \"Entertainment\",\n    },\n    {\n      value: \"sports\",\n      label: \"Sports\",\n    },\n  ];\n\n  /* Defaults to Most recent articles*/\n  const [sort, setSort] = useState({\n    value: \"publishedAt\",\n    label: \"Most Recent\",\n  });\n\n    /* Dropdown options for different options to sort*/\n  const dates = [\n    {\n      value: \"publishedAt\",\n      label: \"Most Recent\",\n    },\n    {\n      value: \"relevancy\",\n      label: \"Most Relevant\",\n    },\n    {\n      value: \"popularity\",\n      label: \"Most Popular\",\n    },\n  ];\n\n  const getData = async () => {\n    /* source url determines the possible related ids based on category */\n    const source = `https://newsapi.org/v2/sources?category=${dropdown.value}&apiKey=78b9d599c4f94f8fa3afb1a5458928d6`;\n    //const response = await fetch(\"https://cors-anywhere.herokuapp.com/\"+source, {mode: 'cors'});\n    const response = await fetch(source);\n    const data = await response.json();\n    //console.log(data);\n    //console.log(data.sources.length); //length of array\n    //console.log(data.sources[0].id); // should display id of the first array\n\n    /* fetch all possible ids and add it to sources of the url below */\n    for (let i = 0; i < data.sources.length; i++) {\n      ids.push(data.sources[i].id); // array of the ids\n    }\n\n    /* x is the string representation of the id array */\n    let x = \"\";\n\n    /* sources can take only a max of 20 items so if category is general, there is no need to filter*/\n    dropdown.value === \"general\" ? (x = \"\") : (x = ids.toString());\n\n    /* main source to search for articles */\n    const url = `https://newsapi.org/v2/everything?q=${query}&sources=${x}&sortBy=${sort.value}&pageSize=30&apiKey=78b9d599c4f94f8fa3afb1a5458928d6`;\n\n    /* if user does not enter anything, alert message will show*/\n    if (query === \"\") {\n      return setAlert(\"Please type in a keyword\");\n    }\n    //const result = await Axios.get(\"https://cors-anywhere.herokuapp.com/\"+url, {mode: 'cors'});\n    const result = await Axios.get(url);\n    //console.log(sources);\n\n    /* if no results show, alert message is displayed */\n    if (result.data.totalResults === 0) {\n      return setAlert(\"No articles found with such name\");\n    }\n    setArticles(result.data.articles);\n    setAlert(\"\");\n    //setQuery(\"\");\n  };\n\n  /* query */\n  const onChange = (e) => {\n    setQuery(e.target.value);\n  };\n\n  /* when search button is clicked */\n  const onSubmit = (e) => {\n    e.preventDefault();\n    getData();\n  };\n\n  /* handles the changes for the different categories */\n  const handleChange = (event) => {\n    setDropdown(event);\n  };\n\n  /* handles the changes for the different sorting methods */\n  const handleSort = (event) => {\n    setSort(event);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"title\">\n        <h1>Worldwide News</h1>\n      </div>\n      <form className=\"search-bar\" onSubmit={onSubmit}>\n        <div className=\"alertStyle\">\n          {alert !== \"\" && <Alert alert={alert} />}\n        </div>\n        <div className=\"inline\">\n          <input\n            type=\"text\"\n            placeholder=\"Search News\"\n            autoComplete=\"off\"\n            onChange={onChange}\n            value={query}\n          />\n        </div>\n        <div className=\"inline\">\n          <Select value={dropdown} options={labels} onChange={handleChange} />\n        </div>\n        <div className=\"inline\">\n          <Select value={sort} options={dates} onChange={handleSort} />\n        </div>\n        <div className=\"inline\">\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div className=\"articles\">\n        {articles != [] &&\n          articles.map((article) => (\n            <Article key={uuidv4()} article={article} />\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}